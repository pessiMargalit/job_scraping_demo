name: Python PR Test

on:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Fetch main branch
      run: |
        git fetch origin main
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    - uses: actions/checkout@v2.1.0
    - uses: jitterbit/get-changed-files@v1
      id: files
      with:
        format: space-delimited
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Find New Scrapers
      run: |
        # Extracting names of changed scraper files
        # turn into array only if under Scrapers/CompanyScrapers
        SCRAPERS=$(echo "${{steps.files.outputs.added_modified}}" | grep -o 'Scrapers/CompanyScrapers/[^ ]*' | awk -F'/' '{print $NF}' | paste -sd, -)
        echo "SCRAPERS=$SCRAPERS" >> "$GITHUB_ENV"
    - name: Run Tests on New Scrapers
      run: |
        if [ -n "$SCRAPERS" ]; then
          echo "Running tests on $SCRAPERS"
          pytest tests/test_scrapers.py --companies $SCRAPERS --junit-xml=test-results.xml
        else
          echo "No company scrapers specified. Skipping tests."
        fi
    - name: Surface failing tests
      if: always()
      uses: pmeier/pytest-results-action@main
      with:
        # A list of JUnit XML files, directories containing the former, and wildcard
        # patterns to process.
        # See @actions/glob for supported patterns.
        path: test-results.xml

        # (Optional) Add a summary of the results at the top of the report
        summary: true

        # (Optional) Select which results should be included in the report.
        # Follows the same syntax as `pytest -r`
        display-options: fEX

        # (Optional) Fail the workflow if no JUnit XML was found.
        fail-on-empty: false

        # (Optional) Title of the test results section in the workflow summary
        title: Test results
