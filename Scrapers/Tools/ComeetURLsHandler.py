import re

from googlesearch import search
import pandas as pd
import time
from pathlib import Path
from enum import Enum
import openpyxl

from Scrapers.Tools.ComeetCompany import ComeetCompany

companies = ["Surgimate",
             "G1",
             "Cognyte",
             "MassChallenge",
             "Codefresh",
             "PwC",
             "RapidAPI",
             "Pax8",
             "Blimey",
             "Amazon",
             "Joyned",
             "Eggxyt",
             "Meetup",
             "המוסד",
             "F5",
             "Rafa",
             "Earnix",
             "מתן",
             "Synamedia",
             "RAD",
             "Cambium",
             "שטראוס",
             "ריסקו",
             "מרכנתיל",
             "AirFleet",
             "Sosa",
             "StackOverflow",
             "Autodesk",
             "Torii",
             "Nvidia",
             "Huboo",
             "Tumelo",
             "Unilever",
             "Cymotive",
             "Energean",
             "AposHealth",
             "לאומית",
             "Granalix",
             "Inomize",
             "Rupert",
             "Alumeshet",
             "מטב",
             "ColorChip",
             "Plarium",
             "Experitest",
             "SundaySky",
             "Quickode",
             "Elkayam",
             "Rovco",
             "Novartis",
             "JCRC",
             "C2A",
             "AVX",
             "Qualcomm",
             "1Beat",
             "Medinol",
             "Etoro",
             "Cisco",
             "Bizzabo",
             "Tecton",
             "Ecologi",
             "דלתא",
             "Afimilk",
             "Harmonic",
             "Elementor",
             "Zencity",
             "Seagate",
             "Gloat",
             "Medtronic",
             "EyeCarePro",
             "Melisron",
             "Moonactive",
             "Koalys",
             "Tango",
             "Siga",
             "Trax",
             "Civan",
             "Merck",
             "Fyllo",
             "Lytx",
             "TechSparkManual",
             "Miggo",
             "Kahena",
             "NoTraffic",
             "שלו",
             "Dropbox",
             "Academix",
             "Mellanox",
             "Signal",
             "JNF",
             "ExCo",
             "Pepperi",
             "Perimeter81",
             "BetterReach",
             "Perion",
             "dojo",
             "Seccl",
             "Clarivate",
             "Google",
             "Cfir",
             "מת",
             "VeracityAds",
             "CropX",
             "מידרג",
             "Wiz",
             "Genda",
             "מיגל",
             "JFrog",
             "Teramount",
             "Zim",
             "Brainstorm",
             "Mixtiles",
             "Datadog",
             "Etsy",
             "Duda",
             "Allscripts",
             "INSPEKTO",
             "Similarweb",
             "JVP",
             "Hometalk",
             "Checkmarx",
             "KPMG",
             "Freemind",
             "Esoterix",
             "Verint",
             "PwC",
             "Wiliot",
             "שגריר",
             "Amarel",
             "Intuitive",
             "Keter",
             "eBay",
             "הדסה",
             "ADASKY",
             "Augury",
             "Codicate",
             "קליר",
             "Operative",
             "AU10TIX",
             "ריקושט",
             "Plus500",
             "Coinbase",
             "Heyday",
             "Mobileye",
             "Neteera",
             "Kaltura",
             "Chronosphere",
             "שפיר",
             "Ormat",
             "Via",
             "Marvell",
             "Viziblezone",
             "Cela",
             "Unity",
             "Dyson",
             "Jifiti",
             "אגד",
             "Automattic",
             "Vishay",
             "Pikoya",
             "Taboola",
             "PwC",
             "Moburst",
             "InZiv",
             "Vayyar",
             "EZsave",
             "Riskified",
             "AFMDA",
             "AppsFlyer",
             "Parsempo",
             "Ceragon",
             "Rapyd",
             "Padagis",
             "MagniLearn",
             "Citi",
             "Armo",
             "Chegg",
             "RADA",
             "200apps",
             "Pagaya",
             "Albaad",
             "40Nuggets",
             "Clear",
             "Gett",
             "נירלט",
             "Vareto",
             "Dealhub",
             "Namogoo",
             "Webflow",
             "IDT",
             "Matrix",
             "Humane",
             "Deloitte",
             "BTG",
             "Anywell",
             "Cielo",
             "AmplioSpeech",
             "Authomize",
             "Redflex",
             "Melio",
             "OwnBackup",
             "Rafael",
             "Securedtouch",
             "ישרוטל",
             "Cloudinary",
             "Arbe",
             "Yotpo",
             "Ericom",
             "Cherre",
             "Squaretalk",
             "Fireblocks",
             "IKEA",
             "AudioCodes",
             "Unique",
             "מרכזה",
             "Bezeq",
             "YuLife",
             "Gihon",
             "Elastic",
             "Sefaria",
             "SolarEdge",
             "תומר",
             "Github",
             "Lumenis",
             "Ghyston",
             "Guesty",
             "PLsense",
             "RAC",
             "Deepgram",
             "Taldor",
             "אסותא",
             "מאל",
             "Nexar",
             "Qualcomm",
             "Autoleadstar",
             "Cadence",
             "LibLab",
             "abra",
             "proteanTecs",
             "Vimeo",
             "Blinkist",
             "Morphisec",
             "GradTrain",
             "JSOF",
             "OpenAI",
             "Binerva",
             "Zapier",
             "Uala",
             "Brijj",
             "Datacrushers",
             "Surgimate",
             "Gauzy",
             "Lumen",
             "Amazon",
             "Strattic",
             "PayEm",
             "SOUTHWORKS",
             "כיוונים",
             "DeepMind",
             "Mobileye",
             "Invision",
             "Kratos",
             "Razel",
             "WeWork",
             "Urecsys",
             "Lightricks",
             "Cellebrite",
             "מטרופולין",
             "BigID",
             "WishTrip",
             "Riverside",
             "Armis",
             "Palantir",
             "Zyte",
             "Visionix",
             "OpenText",
             "Medisafe",
             "ADVA",
             "Infinidat",
             "Aidoc",
             "Tipalti",
             "Trullion",
             "תדהר",
             "Novocure",
             "אידיאל",
             "Dribbble",
             "BMC",
             "Heroku",
             "balink",
             "Intel",
             "Greeninvoice",
             "Salignostics",
             "Graphcore",
             "Healthee",
             "Imubit",
             "WeWork",
             "תנובה",
             "Cyberbit",
             "Agora",
             "Maytronics",
             "מקדונלדס",
             "Anyclip",
             "UJIA",
             "שמיר",
             "BriefCam",
             "Jolt",
             "Ayyeka",
             "Silk",
             "CauseMatch",
             "Atlassian",
             "DocuSign",
             "Marketing66",
             "Overwolf",
             "Outbrain",
             "Sightful",
             "Develeap",
             "Radware",
             "Sitehood",
             "Kehillah",
             "UWE",
             "Houzz",
             "Lemonade",
             "Optimove",
             "McCann",
             "Calypsa",
             "Swimm",
             "Ivory",
             "Skillshare",
             "Edgybees",
             "Convizit",
             "Net2phone",
             "Roundforest",
             "Whereby",
             "ActiveFence",
             "Clearshift",
             "Payoneer",
             "Vinciworks",
             "Rocketmakers",
             "Verbit",
             "Pico",
             "פעמית",
             "ויקטורי",
             "BrainQ",
             "Snyk",
             "Oracle",
             "ForgeRock",
             "Knesset",
             "Brix",
             "Meta",
             "Handshake",
             "Artlist",
             "Wix",
             "שופרסל",
             "Simply",
             "Moneyhub",
             "Liveperson",
             "Apple",
             "Robinhood",
             "Privitar",
             "DBSH",
             "הג",
             "עלם",
             "Explorium",
             "Aardman",
             "Brightsource",
             "Magal",
             "Keshet",
             "Hinge",
             "Insightec",
             "HP",
             "Carmel6000",
             "Ribbon",
             "Sisense",
             "Winsite",
             "Fiverr",
             "שב",
             "SITE123",
             "BOI",
             "OSG",
             "Kape",
             "Valigara",
             "DAOstack",
             "Cheq",
             "Sealy",
             "Bluevine",
             "WalkMe",
             "Exigence",
             "FatFish",
             "KLA",
             "SolidRun",
             "Nuro",
             "Cyolo",
             "XMOS",
             "CyberArk",
             "Algosec",
             "BreezoMeter",
             "שלווה",
             "Stratasys",
             "YellowDog",
             "Mobilize",
             "Bezalel",
             "Amdocs",
             "Cognility",
             "בעצמי",
             "ThriveDX",
             "מקורות",
             "Anyword",
             "CiteAb",
             "Decathlon",
             "Curve",
             "Hibob",
             "MyHeritage",
             "SentinelOne",
             "Ourcrowd",
             "Forter",
             "Skai",
             "CorrActions",
             "Buildots",
             "Nova",
             "Biometrix",
             "Playtika",
             "IronSource",
             "Hubspot",
             "Freightos",
             "Alut",
             "Hillel",
             "Microsoft",
             "Yes",
             "Aeroflex",
             "Protego",
             "הולנדיה",
             "באבקום",
             "UJA",
             "Tally",
             "Gamatronic",
             "EDP",
             "Keepers",
             "Philips",
             "IBM",
             "Turnstile",
             "Camereyes",
             "Nogamy",
             "Team8",
             "Deel",
             "Shutterfly",
             "Twitch",
             "ScoutCam",
             "WordLift",
             "Noname",
             "קוסל",
             "Capgemini",
             "Caesarstone",
             "CrediFi",
             "Sunbit",
             "ONE",
             "Kaholo",
             "SodaStream",
             "CEVA",
             "Tesla",
             "נטפים",
             "Revelator",
             "Aeronautics",
             "Auth0",
             "AdaCore",
             "Salesforce",
             "Speaknow",
             "Stripe",
             "Autodesk",
             "Austrade",
             "Axonius",
             "Hotjar",
             "Copyleaks",
             "BagelDB",
             "Trgint",
             "Cybereason",
             "AgroScout",
             "Riskfield",
             "תקשוב",
             "Ultraleap",
             "Partner",
             "Otonomo",
             "Innovopro",
             "Kaspersky",
             "פלאפון",
             "טמבור",
             "Triumph",
             "ITsMine",
             "OnceHub",
             "DoubleVerify",
             "Klear",
             "Bringg",
             "Fieldin",
             "Sightfull",
             "Soteria",
             "Loop",
             "Vicarius",
             "Microsoft",
             "Ness",
             "Medasense",
             "BlueSnap",
             "indydevs",
             "Vizo",
             "Redpanda",
             "Incredibuild",
             "Fellow",
             "Deloitte",
             "LiveU",
             "SCD",
             "Anagal",
             "Neureality",
             "Feedvisor",
             "Orcam",
             "Bjss",
             "Wikimedia",
             "Invision",
             "מעברים"]


class ComeetURLsHandler:
    allowed_extensions = {'csv': ".csv", 'excel': ".xlsx"}

    def initialize_company_dict(self, companies):
        if isinstance(companies, list):
            return {comp: "" for comp in companies}
        if isinstance(companies, str):
            result_dict = dict()
            file = Path(companies)
            if file.exists() and file.is_file and file.suffix in self.allowed_extensions.values():
                df = pd.read_excel(companies) if companies.endswith('.xlsx') else pd.read_csv(companies)
            for index, row in df.iterrows():
                name = row.iloc[0]  # Assuming the name is in the first column
                value = row.iloc[1] if len(row) > 1 else ''
                result_dict[name] = value
            return result_dict

    def get_first_google_result(self, query):
        # TODO: Find 5 first results and return the most accurate result
        try:
            search_results = search(f'comeet {query} career', num=1, stop=1, pause=2)  # Add a pause of 2 seconds
            first_result_url = next(search_results)
            print(query, ": ", first_result_url)
            return first_result_url

        except StopIteration:
            print("No search results found.")
            return None
        except Exception as e:
            print(e)
            return None

    def check_url(self, name, url):
        """
        This function check the URL if it is use comeet
        """
        try:
            comeet_prefix = "https://www.comeet.com/jobs/"
            if comeet_prefix not in url:
                return False
            # TODO - try to translate company name into english
            pattern = re.compile(r'^[a-zA-Z0-9!@#$%^&*()-_+=\[\]{};:\'",.<>?/`~\s]+$')
            if not bool(pattern.match(name)):
                return False
                # raise Exception("Error: Company name should be only English")

            # Checking if the company name is in the URL
            # TODO: Remove "Ltd" suffix and special chars

            name = name.lower().replace(" ", "")
            sub_url = url[len(comeet_prefix):]
            sub_url = sub_url.replace("-", "")
            if name not in sub_url:
                return False
        except Exception as e:
            print(e)
            return False
        return True

    def update_existing_urls(self, output_file_path, companies_dict):
        try:
            # Convert the dictionary to a DataFrame
            df = pd.DataFrame(list(companies_dict.items()), columns=['Company', 'URL'])
            # Write the DataFrame to the specified file path
            if output_file_path.endswith(self.allowed_extensions['csv']):
                df.to_csv(output_file_path, index=False)
            elif output_file_path.endswith(self.allowed_extensions['excel']):
                df.to_excel(output_file_path, index=False, engine='openpyxl')
            else:
                print("Unsupported file format. Please provide a CSV or Excel file.")
            print(f"Data successfully written to {output_file_path}")
        except Exception as e:
            print(f"Error writing to file: {e}")

    def create_new_comeet_branch(self, name, url):
        cc = ComeetCompany(name, url)
        cc.create_branch(branch_name=f"shoshanas/{name.lower()}")
        file_path = cc.generate_scraper()
        cc.add_commit_push(file_path)
        cc.checkout_previous_branch()


cuh = ComeetURLsHandler()
# companies_file = r"C:\Users\User\Downloads\res.xlsx"
# comp_dict = cuh.initialize_company_dict(["Surgimate", "Pax8", "Cognyte", "G1"])
# copied_comp_dict = comp_dict.copy()
# for comp in copied_comp_dict.keys():
#     url = cuh.get_first_google_result(comp)
#     # TODO: Fix URLs like "https://www.comeet.com/jobs/surgimate/B7.00D/vp-of-customers/6B.A37"
#     #  to be more general, like: "https://www.comeet.com/jobs/surgimate/B7.00D"
#     if cuh.check_url(name=comp, url=url):
#         comp_dict[comp] = url
#     else:
#         del comp_dict[comp]
# cuh.update_existing_urls(output_file_path=companies_file, companies_dict=comp_dict)
# updated_urls_dict = cuh.initialize_company_dict(companies_file)
# print(updated_urls_dict)
cuh.create_new_comeet_branch('Surgimate', 'https://www.comeet.com/jobs/surgimate/B7.00D')
#{'Surgimate': 'https://www.comeet.com/jobs/surgimate/B7.00D/vp-of-customers/6B.A37', 'Pax8': 'https://www.comeet.com/jobs/pax8/52.008', 'Cognyte': 'https://www.comeet.com/jobs/cognyte/F2.009'}

